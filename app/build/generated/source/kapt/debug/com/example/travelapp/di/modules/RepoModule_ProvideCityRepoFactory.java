// Generated by Dagger (https://dagger.dev).
package com.example.travelapp.di.modules;

import com.example.common.data.data_sources.CityDataSource;
import com.example.common.data.repos.CityRepo;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoModule_ProvideCityRepoFactory implements Factory<CityRepo> {
  private final RepoModule module;

  private final Provider<CityDataSource> cityDataSourceProvider;

  public RepoModule_ProvideCityRepoFactory(RepoModule module,
      Provider<CityDataSource> cityDataSourceProvider) {
    this.module = module;
    this.cityDataSourceProvider = cityDataSourceProvider;
  }

  @Override
  public CityRepo get() {
    return provideCityRepo(module, cityDataSourceProvider.get());
  }

  public static RepoModule_ProvideCityRepoFactory create(RepoModule module,
      Provider<CityDataSource> cityDataSourceProvider) {
    return new RepoModule_ProvideCityRepoFactory(module, cityDataSourceProvider);
  }

  public static CityRepo provideCityRepo(RepoModule instance, CityDataSource cityDataSource) {
    return Preconditions.checkNotNullFromProvides(instance.provideCityRepo(cityDataSource));
  }
}
